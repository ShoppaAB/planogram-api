{
  "openapi": "3.0.4",
  "info": {
    "title": "Shoppa AB Planogram API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://productsvc.shoppa.com",
      "description": "Production Planogram API"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["MediablobService"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/planograms": {
      "get": {
        "tags": ["PlanogramApiEndpoints"],
        "summary": "Fetches all planograms registered on a customer node.",
        "parameters": [
          {
            "name": "includeSubscribers",
            "in": "query",
            "description": "True if all subscribers shall be included per planogram. \r\n            This can result in a large response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/planograms/{externalId}": {
      "get": {
        "tags": ["PlanogramApiEndpoints"],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "codeType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["PlanogramApiEndpoints"],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanogramRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": ["PlanogramApiEndpoints"],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/planograms/{externalId}/subscribers": {
      "get": {
        "tags": ["PlanogramApiEndpoints"],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["PlanogramApiEndpoints"],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/planograms/{externalId}/fixtures/{fixtureId}": {
      "get": {
        "tags": ["PlanogramApiEndpoints"],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fixtureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codeType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/planogram/{guid}/products": {
      "get": {
        "tags": ["PlanogramEndpoints"],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/planogram/subscriptions": {
      "get": {
        "tags": ["PlanogramEndpoints"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FixtureRequest": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayGroup": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanogramRequest": {
        "required": ["fixtures", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "stopDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "displayGroup": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "codeType": {
            "type": "string",
            "nullable": true
          },
          "sourceVersion": {
            "type": "string",
            "nullable": true
          },
          "fixtures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FixtureRequest"
            },
            "nullable": true
          },
          "subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriberRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductChanges": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date"
          },
          "to": {
            "type": "string",
            "format": "date"
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "required": ["code"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "displayGroup": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductSearchFilter": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "campaigns": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "hasPlanogram": {
            "type": "boolean"
          },
          "printable": {
            "type": "boolean"
          },
          "changes": {
            "$ref": "#/components/schemas/ProductChanges"
          }
        },
        "additionalProperties": false
      },
      "SubscriberRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "stopDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "sourceVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ShoppaOpenID": {
        "type": "openIdConnect",
        "description": "Authenticate with Shoppa OpenID",
        "openIdConnectUrl": "https://login.shoppa.com/.well-known/openid-configuration"
      }
    }
  },
  "security": [
    {
      "ShoppaOpenID": []
    }
  ]
}
